class Node:
  def __init__(self, data):
    self.left = None
    self.right = None
    self.data = data

class binarySearchTree:
  def __init__(self):
    self.root = None

  def inorder(self, node):
    if node is None:
        return
    self.inorder(node.left)
    print(node.data)
    self.inorder(node.right)
    

  def preorder(self, node):
    if node is None:
        return
    print(node.data)
    self.preorder(node.left)
    self.preorder(node.right)
    
    
  def postorder(self, node):
    if node is None:
        return
    self.postorder(node.left)
    self.postorder(node.right)
    print(node.data)

  


node1 = Node(30)
node2 = Node(20)
node3 = Node(40)
node4 = Node(15)
node5 = Node(25)
node6 = Node(35)

node1.left = node2
node1.right = node3
node2.left = node4
node2.right = node5
node3.left = node6


bst = binarySearchTree()
bst.root = node1
print("INORDER TRAVERSAL")
bst.inorder(node1)
print("PREORDER TRAVERSAL")
bst.preorder(node1)
print("POSTORDER TRAVERSAL")
bst.postorder(node1)


    
        
            
